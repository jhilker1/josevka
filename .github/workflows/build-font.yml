name: Build Font
on:
  push:
    branches:
      - main
    paths:
      - 'build.org'
  workflow_dispatch:

jobs:
 check_release_exists:
    runs-on: ubuntu-latest
    steps:
      - id: check
        run: |
          VER=$(curl -sL https://api.github.com/repos/jhilker1/josevka/releases/latest | jq -r ".tag_name")
          [[ $VER != "v1.0.8" ]]
 build_font:
  needs: check_release_exists
  runs-on: ubuntu-latest
  # only build if release hasn't been built yet
  if: needs.check_release_exists.result == 'success'
  steps:
    - name: Checkout Repo 
      uses: actions/checkout@v2
    
    - name: Install Dependencies
      run: |
        sudo apt update --yes
        sudo apt install dos2unix emacs-nox python3-fontforge

    - name: Export Build Plans
      run: emacs -Q --batch -l org build.org -f org-babel-tangle

    - name: Fix Line Ending Errors
      run: dos2unix private-build-plans.toml build.org rename.py

    - name: Set Font Vers
      id: set-font-vers
      run: |
        VER=$(awk 'NR==1{print $2}' build.org | cut -d'v' -f2)
        echo "IOSEVKA_VER=$VER" >> $GITHUB_ENV
        RELVER=$(awk 'NR==2{print $2}' build.org)
        echo "RELEASE_VER=$RELVER" >> $GITHUB_ENV
    
    - name: Build Josevka
      run: |
        docker run -e FONT_VERSION=${{env.IOSEVKA_VER}} -i -v $(pwd):/build avivace/iosevka-build ttf::josevka
        docker run -e FONT_VERSION=${{env.IOSEVKA_VER}} -i -v $(pwd):/build avivace/iosevka-build ttf::josevka-mono
        docker run -e FONT_VERSION=${{env.IOSEVKA_VER}} -i -v $(pwd):/build avivace/iosevka-build ttf::josevka-code
        docker run -e FONT_VERSION=${{env.IOSEVKA_VER}} -i -v $(pwd):/build avivace/iosevka-build ttf::josevka-code-mono
        docker run -e FONT_VERSION=${{env.IOSEVKA_VER}} -i -v $(pwd):/build avivace/iosevka-build ttf::josevka-book-sans
        docker run -e FONT_VERSION=${{env.IOSEVKA_VER}} -i -v $(pwd):/build avivace/iosevka-build ttf::josevka-book-slab

    - run: mkdir patched

    - name: Patch Josevka
      continue-on-error: true
      run: docker run -v $(pwd)/dist/josevka/ttf:/in -v $(pwd)/patched/josevka:/out nerdfonts/patcher -c -l -q --no-progressbars --careful

    - name: Patch Josevka Mono
      continue-on-error: true
      run: docker run -v $(pwd)/dist/josevka-mono/ttf:/in -v $(pwd)/patched/josevkaMono:/out nerdfonts/patcher -c -l -s -q --no-progressbars

    - name: Patch Josevka Code
      continue-on-error: true
      run: docker run -v $(pwd)/dist/josevka-code/ttf:/in -v $(pwd)/patched/josevkaCode:/out nerdfonts/patcher -c -l -q --no-progressbars --careful

    
    - name: Rename Josevka Code
      run: find "$(pwd)/patched/josevkaCode" -name "*.ttf" -exec python3 rename.py {} 'Josevka Code' \;
    
    - name: Patch Josevka Code Mono
      continue-on-error: true
      run: docker run -v $(pwd)/dist/josevka-mono/ttf:/in -v $(pwd)/patched/josevkaCodeMono:/out nerdfonts/patcher -c -l -s -q --no-progressbars

    - name: Create Font Zips
      run: |
        zip -j -9 "JosevkaBookSans-${{env.RELEASE_VER}}.zip" $(pwd)/dist/josevka-book-sans/ttf/*.ttf
        zip -j -9 "JosevkaBookSlab-${{env.RELEASE_VER}}.zip" $(pwd)/dist/josevka-book-slab/ttf/*.ttf
        cd patched
        zip -r -9 "Josevka-${{env.RELEASE_VER}}.zip" ./josevka/*.ttf ./josevkaMono/*.ttf
        zip -r -9 "JosevkaCode-${{env.RELEASE_VER}}.zip" ./josevkaCode/*.ttf ./josevkaCodeMono/*.ttf
        mv *.zip ../
    
    - name: Expose git commit data
      uses: rlespinasse/git-commit-data-action@v1

    - name: Release Fonts
      uses: ncipollo/release-action@v1
      with:
        artifacts: "*.zip,rename.py"
        tag: ${{ env.RELEASE_VER }}
        body: ${{ env.GIT_COMMIT_MESSAGE_BODY }}
        commit: ${{ github.event.head_commit.id }}
        token: ${{ secrets.RELEASE_TOKEN }}